/*
    GLFW Wrapper
    (incomplete)
*/

// TODO: The location of GLFW library may change, if you compile with gcc or msvc
//   then we would use different libraries. How to deal with that.
#if OS_WINDOWS
    #if LINKER_MSVC
        // #load "libs/glfw-3.3.9/lib-vc2022/glfw3.lib" as GLFW
        #load "libs/glfw-3.3.9/lib-vc2022/glfw3.dll" as GLFW
    #else
        // #load "libs/glfw-3.3.9/lib-mingw-w64/glfw3.lib" as GLFW
        #load "libs/glfw-3.3.9/lib-mingw-w64/glfw3.dll" as GLFW
    #endif
    #load "user32.lib" // glfw3 requires these libraries
    #load "gdi32.lib"
    #load "advapi32.lib"
    #load "shell32.lib"
#else
    // TODO: I don't have a Linux computer where I can test GLFW.
    //   I am testing the Linux stuff on a server without a graphical interface.
#endif

#macro GLFWAPI @import(GLFW)
#macro GLFWwindow void

fn GLFWAPI glfwInit() -> i32;
fn GLFWAPI glfwCreateWindow(width: i32, height: i32, title: char*, monitor: void*, share: void*) -> void*;
fn GLFWAPI glfwDestroyWindow(window: void*)
fn GLFWAPI glfwGetError(description: char**) -> i32

fn GLFWAPI glfwTerminate();
fn GLFWAPI glfwMakeContextCurrent(window: void*);
fn GLFWAPI glfwWindowShouldClose(window: void*) -> i32;
fn GLFWAPI glfwSwapBuffers(window: void*);
fn GLFWAPI glfwPollEvents();
fn GLFWAPI glfwWindowHint(target: i32, hint: i32);
fn GLFWAPI glfwGetWindowSize(window: void*, width: i32*, height: i32*);
fn GLFWAPI glfwSwapInterval(interval: i32);
fn GLFWAPI glfwGetCursorPos(window: void*, xpos: f64*, ypos: f64*);

fn GLFWAPI glfwGetInputMode(window: void*, mode: i32) -> i32;
fn GLFWAPI glfwSetInputMode(window: void*, mode: i32, value: i32);


#macro GLFWkeyfun fn @oscall(window: void*, key: i32, scancode: i32, action: i32, mods: i32)
#macro GLFWmousebuttonfun fn @oscall(window: void*, button: i32, action: i32, mods: i32)
#macro GLFWcursorposfun fn @oscall(window: void*, xpos: f64, ypos: f64)
#macro GLFWscrollfun fn @oscall(window: void*, xoffset: f64, yoffset: f64)
#macro GLFWwindowsizefun fn @oscall(window: void*, width: i32, height: i32)
#macro GLFWcharfun fn @oscall(window: void*, codepoint: u32)
// event for joystick is GLFW_CONNECTED or GLFW_DISCONNECTED
#macro GLFWjoystickfun fn @oscall(jid: i32, event: i32)

fn GLFWAPI glfwSetKeyCallback(window: void*, callback: GLFWkeyfun) -> GLFWkeyfun;
fn GLFWAPI glfwSetMouseButtonCallback(window: void*, callback: GLFWmousebuttonfun) -> GLFWmousebuttonfun;
fn GLFWAPI glfwSetCursorPosCallback(window: void*, callback: GLFWcursorposfun) -> GLFWcursorposfun;
fn GLFWAPI glfwSetScrollCallback(window: void*, callback: GLFWscrollfun) -> GLFWscrollfun;
fn GLFWAPI glfwSetWindowSizeCallback(window: void*, callback: GLFWwindowsizefun) -> GLFWwindowsizefun;
fn GLFWAPI glfwSetCharCallback(window: void*, callback: GLFWcharfun) -> GLFWcharfun;
fn GLFWAPI glfwSetJoystickCallback(callback: GLFWjoystickfun) -> GLFWjoystickfun;

fn GLFWAPI glfwGetProcAddress(procname: char*) -> fn();

fn GLFWAPI glfwJoystickPresent(jid: i32) -> i32;
fn GLFWAPI glfwGetJoystickAxes(jid: i32, count: i32*) -> f32*;   // returns const
fn GLFWAPI glfwGetJoystickButtons(jid: i32, count: i32*) -> u8*; // returns const
fn GLFWAPI glfwGetJoystickHats(jid: i32, count: i32*) -> u8*;    // returns const
fn GLFWAPI glfwGetJoystickName(jid: i32) -> char*; // returns const
fn GLFWAPI glfwGetJoystickGUID(jid: i32) -> char*; // returns const

fn GLFWAPI glfwSetJoystickUserPointer(jid: i32, pointer: void*);
fn GLFWAPI glfwGetJoystickUserPointer(jid: i32) -> void*;

fn GLFWAPI glfwJoystickIsGamepad(jid: i32) -> i32;
fn GLFWAPI glfwUpdateGamepadMappings(string: char*) -> i32;
fn GLFWAPI glfwGetGamepadName(jid: i32) -> char*;
fn GLFWAPI glfwGetGamepadState(jid: i32, state: GLFWgamepadstate*) -> i32;

struct GLFWgamepadstate {
    buttons: u8[15]; // values can be GLFW_PRESS or GLFW_RELEASE
    axes: f32[6]; // values range form -1.0 to 1.0
}

fn GLFWAPI glfwSetClipboardString(window: GLFWwindow*, string: char*);
fn GLFWAPI glfwGetClipboardString(window: GLFWwindow*) -> char*; // returns const
/*
    Parts copy pasted from glfw3.h
*/
#macro GLFW_CONTEXT_VERSION_MAJOR  0x00022002
#macro GLFW_CONTEXT_VERSION_MINOR  0x00022003
#macro GLFW_OPENGL_PROFILE         0x00022008
#macro GLFW_OPENGL_CORE_PROFILE    0x00032001

#macro GLFW_CURSOR                 0x00033001
#macro GLFW_STICKY_KEYS            0x00033002
#macro GLFW_STICKY_MOUSE_BUTTONS   0x00033003
#macro GLFW_LOCK_KEY_MODS          0x00033004
#macro GLFW_RAW_MOUSE_MOTION       0x00033005

#macro GLFW_CURSOR_NORMAL          0x00034001
#macro GLFW_CURSOR_HIDDEN          0x00034002
#macro GLFW_CURSOR_DISABLED        0x00034003

#macro GLFW_CONNECTED              0x00040001
#macro GLFW_DISCONNECTED           0x00040002

#macro GLFW_TRUE                   1
#macro GLFW_FALSE                  0

#macro GLFW_RELEASE                0
#macro GLFW_PRESS                  1
#macro GLFW_REPEAT                 2

#macro GLFW_MOUSE_BUTTON_1         0 // left
#macro GLFW_MOUSE_BUTTON_2         1 // right
#macro GLFW_MOUSE_BUTTON_3         2 // middle

/* The unknown key */
#macro GLFW_KEY_UNKNOWN            -1

/* Printable keys */
#macro GLFW_KEY_SPACE              32
#macro GLFW_KEY_APOSTROPHE         39  /* ' */
#macro GLFW_KEY_COMMA              44  /* , */
#macro GLFW_KEY_MINUS              45  /* - */
#macro GLFW_KEY_PERIOD             46  /* . */
#macro GLFW_KEY_SLASH              47  /* / */
#macro GLFW_KEY_0                  48
#macro GLFW_KEY_1                  49
#macro GLFW_KEY_2                  50
#macro GLFW_KEY_3                  51
#macro GLFW_KEY_4                  52
#macro GLFW_KEY_5                  53
#macro GLFW_KEY_6                  54
#macro GLFW_KEY_7                  55
#macro GLFW_KEY_8                  56
#macro GLFW_KEY_9                  57
#macro GLFW_KEY_SEMICOLON          59  /* ; */
#macro GLFW_KEY_EQUAL              61  /* = */
#macro GLFW_KEY_A                  65
#macro GLFW_KEY_B                  66
#macro GLFW_KEY_C                  67
#macro GLFW_KEY_D                  68
#macro GLFW_KEY_E                  69
#macro GLFW_KEY_F                  70
#macro GLFW_KEY_G                  71
#macro GLFW_KEY_H                  72
#macro GLFW_KEY_I                  73
#macro GLFW_KEY_J                  74
#macro GLFW_KEY_K                  75
#macro GLFW_KEY_L                  76
#macro GLFW_KEY_M                  77
#macro GLFW_KEY_N                  78
#macro GLFW_KEY_O                  79
#macro GLFW_KEY_P                  80
#macro GLFW_KEY_Q                  81
#macro GLFW_KEY_R                  82
#macro GLFW_KEY_S                  83
#macro GLFW_KEY_T                  84
#macro GLFW_KEY_U                  85
#macro GLFW_KEY_V                  86
#macro GLFW_KEY_W                  87
#macro GLFW_KEY_X                  88
#macro GLFW_KEY_Y                  89
#macro GLFW_KEY_Z                  90
#macro GLFW_KEY_LEFT_BRACKET       91  /* [ */
#macro GLFW_KEY_BACKSLASH          92  /* \ */
#macro GLFW_KEY_RIGHT_BRACKET      93  /* ] */
#macro GLFW_KEY_GRAVE_ACCENT       96  /* ` */
#macro GLFW_KEY_WORLD_1            161 /* non-US #1 */
#macro GLFW_KEY_WORLD_2            162 /* non-US #2 */

/* Function keys */
#macro GLFW_KEY_ESCAPE             256
#macro GLFW_KEY_ENTER              257
#macro GLFW_KEY_TAB                258
#macro GLFW_KEY_BACKSPACE          259
#macro GLFW_KEY_INSERT             260
#macro GLFW_KEY_DELETE             261
#macro GLFW_KEY_RIGHT              262
#macro GLFW_KEY_LEFT               263
#macro GLFW_KEY_DOWN               264
#macro GLFW_KEY_UP                 265
#macro GLFW_KEY_PAGE_UP            266
#macro GLFW_KEY_PAGE_DOWN          267
#macro GLFW_KEY_HOME               268
#macro GLFW_KEY_END                269
#macro GLFW_KEY_CAPS_LOCK          280
#macro GLFW_KEY_SCROLL_LOCK        281
#macro GLFW_KEY_NUM_LOCK           282
#macro GLFW_KEY_PRINT_SCREEN       283
#macro GLFW_KEY_PAUSE              284
#macro GLFW_KEY_F1                 290
#macro GLFW_KEY_F2                 291
#macro GLFW_KEY_F3                 292
#macro GLFW_KEY_F4                 293
#macro GLFW_KEY_F5                 294
#macro GLFW_KEY_F6                 295
#macro GLFW_KEY_F7                 296
#macro GLFW_KEY_F8                 297
#macro GLFW_KEY_F9                 298
#macro GLFW_KEY_F10                299
#macro GLFW_KEY_F11                300
#macro GLFW_KEY_F12                301
#macro GLFW_KEY_F13                302
#macro GLFW_KEY_F14                303
#macro GLFW_KEY_F15                304
#macro GLFW_KEY_F16                305
#macro GLFW_KEY_F17                306
#macro GLFW_KEY_F18                307
#macro GLFW_KEY_F19                308
#macro GLFW_KEY_F20                309
#macro GLFW_KEY_F21                310
#macro GLFW_KEY_F22                311
#macro GLFW_KEY_F23                312
#macro GLFW_KEY_F24                313
#macro GLFW_KEY_F25                314
#macro GLFW_KEY_KP_0               320
#macro GLFW_KEY_KP_1               321
#macro GLFW_KEY_KP_2               322
#macro GLFW_KEY_KP_3               323
#macro GLFW_KEY_KP_4               324
#macro GLFW_KEY_KP_5               325
#macro GLFW_KEY_KP_6               326
#macro GLFW_KEY_KP_7               327
#macro GLFW_KEY_KP_8               328
#macro GLFW_KEY_KP_9               329
#macro GLFW_KEY_KP_DECIMAL         330
#macro GLFW_KEY_KP_DIVIDE          331
#macro GLFW_KEY_KP_MULTIPLY        332
#macro GLFW_KEY_KP_SUBTRACT        333
#macro GLFW_KEY_KP_ADD             334
#macro GLFW_KEY_KP_ENTER           335
#macro GLFW_KEY_KP_EQUAL           336
#macro GLFW_KEY_LEFT_SHIFT         340
#macro GLFW_KEY_LEFT_CONTROL       341
#macro GLFW_KEY_LEFT_ALT           342
#macro GLFW_KEY_LEFT_SUPER         343
#macro GLFW_KEY_RIGHT_SHIFT        344
#macro GLFW_KEY_RIGHT_CONTROL      345
#macro GLFW_KEY_RIGHT_ALT          346
#macro GLFW_KEY_RIGHT_SUPER        347
#macro GLFW_KEY_MENU               348

#macro GLFW_KEY_LAST               GLFW_KEY_MENU

/*! @} */

/*! @defgroup mods Modifier key flags
 *  @brief Modifier key flags.
 *
 *  See [key input](@ref input_key) for how these are used.
 *
 *  @ingroup input
 *  @{ */

/*! @brief If this bit is set one or more Shift keys were held down.
 *
 *  If this bit is set one or more Shift keys were held down.
 */
#macro GLFW_MOD_SHIFT           0x0001
/*! @brief If this bit is set one or more Control keys were held down.
 *
 *  If this bit is set one or more Control keys were held down.
 */
#macro GLFW_MOD_CONTROL         0x0002
/*! @brief If this bit is set one or more Alt keys were held down.
 *
 *  If this bit is set one or more Alt keys were held down.
 */
#macro GLFW_MOD_ALT             0x0004
/*! @brief If this bit is set one or more Super keys were held down.
 *
 *  If this bit is set one or more Super keys were held down.
 */
#macro GLFW_MOD_SUPER           0x0008
/*! @brief If this bit is set the Caps Lock key is enabled.
 *
 *  If this bit is set the Caps Lock key is enabled and the @ref
 *  GLFW_LOCK_KEY_MODS input mode is set.
 */
#macro GLFW_MOD_CAPS_LOCK       0x0010
/*! @brief If this bit is set the Num Lock key is enabled.
 *
 *  If this bit is set the Num Lock key is enabled and the @ref
 *  GLFW_LOCK_KEY_MODS input mode is set.
 */
#macro GLFW_MOD_NUM_LOCK        0x0020

/*! @} */

/*! @defgroup buttons Mouse buttons
 *  @brief Mouse button IDs.
 *
 *  See [mouse button input](@ref input_mouse_button) for how these are used.
 *
 *  @ingroup input
 *  @{ */
#macro GLFW_MOUSE_BUTTON_1         0
#macro GLFW_MOUSE_BUTTON_2         1
#macro GLFW_MOUSE_BUTTON_3         2
#macro GLFW_MOUSE_BUTTON_4         3
#macro GLFW_MOUSE_BUTTON_5         4
#macro GLFW_MOUSE_BUTTON_6         5
#macro GLFW_MOUSE_BUTTON_7         6
#macro GLFW_MOUSE_BUTTON_8         7
#macro GLFW_MOUSE_BUTTON_LAST      GLFW_MOUSE_BUTTON_8
#macro GLFW_MOUSE_BUTTON_LEFT      GLFW_MOUSE_BUTTON_1
#macro GLFW_MOUSE_BUTTON_RIGHT     GLFW_MOUSE_BUTTON_2
#macro GLFW_MOUSE_BUTTON_MIDDLE    GLFW_MOUSE_BUTTON_3
/*! @} */

#macro GLFW_JOYSTICK_1              0
#macro GLFW_JOYSTICK_2              1
#macro GLFW_JOYSTICK_3              2
#macro GLFW_JOYSTICK_4              3
#macro GLFW_JOYSTICK_5              4
#macro GLFW_JOYSTICK_6              5
#macro GLFW_JOYSTICK_7              6
#macro GLFW_JOYSTICK_8              7
#macro GLFW_JOYSTICK_9              8
#macro GLFW_JOYSTICK_10             9
#macro GLFW_JOYSTICK_11             10
#macro GLFW_JOYSTICK_12             11
#macro GLFW_JOYSTICK_13             12
#macro GLFW_JOYSTICK_14             13
#macro GLFW_JOYSTICK_15             14
#macro GLFW_JOYSTICK_16             15
#macro GLFW_JOYSTICK_LAST           GLFW_JOYSTICK_16

#macro GLFW_GAMEPAD_BUTTON_A               0
#macro GLFW_GAMEPAD_BUTTON_B               1
#macro GLFW_GAMEPAD_BUTTON_X               2
#macro GLFW_GAMEPAD_BUTTON_Y               3
#macro GLFW_GAMEPAD_BUTTON_LEFT_BUMPER     4
#macro GLFW_GAMEPAD_BUTTON_RIGHT_BUMPER    5
#macro GLFW_GAMEPAD_BUTTON_BACK            6
#macro GLFW_GAMEPAD_BUTTON_START           7
#macro GLFW_GAMEPAD_BUTTON_GUIDE           8
#macro GLFW_GAMEPAD_BUTTON_LEFT_THUMB      9
#macro GLFW_GAMEPAD_BUTTON_RIGHT_THUMB     10
#macro GLFW_GAMEPAD_BUTTON_DPAD_UP         11
#macro GLFW_GAMEPAD_BUTTON_DPAD_RIGHT      12
#macro GLFW_GAMEPAD_BUTTON_DPAD_DOWN       13
#macro GLFW_GAMEPAD_BUTTON_DPAD_LEFT       14
#macro GLFW_GAMEPAD_BUTTON_LAST            GLFW_GAMEPAD_BUTTON_DPAD_LEFT

#macro GLFW_GAMEPAD_BUTTON_CROSS       GLFW_GAMEPAD_BUTTON_A
#macro GLFW_GAMEPAD_BUTTON_CIRCLE      GLFW_GAMEPAD_BUTTON_B
#macro GLFW_GAMEPAD_BUTTON_SQUARE      GLFW_GAMEPAD_BUTTON_X
#macro GLFW_GAMEPAD_BUTTON_TRIANGLE    GLFW_GAMEPAD_BUTTON_Y

#macro GLFW_GAMEPAD_AXIS_LEFT_X        0
#macro GLFW_GAMEPAD_AXIS_LEFT_Y        1
#macro GLFW_GAMEPAD_AXIS_RIGHT_X       2
#macro GLFW_GAMEPAD_AXIS_RIGHT_Y       3
#macro GLFW_GAMEPAD_AXIS_LEFT_TRIGGER  4
#macro GLFW_GAMEPAD_AXIS_RIGHT_TRIGGER 5
#macro GLFW_GAMEPAD_AXIS_LAST          GLFW_GAMEPAD_AXIS_RIGHT_TRIGGER