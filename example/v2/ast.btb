@version 2
// @disable all
// @enable preprocessor
// @disable interpreter

// @import .\module.btb

// arr: Array;

// arr.ptr = alloc(8);
// arr.size = 8;

// #define TYPE u64
#define TYPE i32

struct B {
    n : TYPE
}
struct A {
    ol: TYPE,
    b: B
}

// a: A = A{3};
a: A = A{3,B{5}};

b = 9

k = a.ol

// struct C {
//     a: i32,
// }

// struct B {
//     int: i32,
//     c: C,
// }
// struct A {
//     slice: i32[],
//     b: B,
//     a: bool,
// }



// struct Linked<T> {
//     start: Item,
//     struct Item {
//         value: T,
//         exist: Exist,
//         next: Item*,
//     }
//     enum Available {
//         Yes,
//         No,
//     }
// }

// struct Array<T> {
//     a: Item,
//     struct Item {
//         index: T,
//         value: bool,
//     }
// }

// Array<Array<i32>>