@TEST_CASE(constructors)

#import "Memory"
#import "Logger"
#import "Lang"

struct Box<T> {
    ptr: T*;
    fn init() {
        ptr = Allocate(sizeof T);
        construct(ptr)
    }
    fn cleanup() {
        destruct(ptr)
        Free(ptr)
        ptr = null
    }
}

struct Item {
    x: i32 = 923;
    y: i32 = 12;

    fn init() {
        _test x; 923;
        _test y; 12;
        *this = Item{}
        y += 21
        hits++
        // log("init")
    }
    fn cleanup() {
        hits++
        _test hits; 2;
        _test y; 33;
    }
}

global hits: i32

box: Box<Item>
// log(&box)

box.init();
_test 923; box.ptr.x;
_test 33; box.ptr.y;
// log(&box)

box.cleanup();
_test null; box.ptr;
// log(&box)

_test 2; hits;


struct Ok {
    x: i32;
    fn init(a: i32 = 5, b: i32 = 9) {
        _test 5; a;
        _test 9; b;
    }
    fn cleanup(b: bool = 3, ya: i32 = 2) {
        _test 3; b;
        _test 2; ya;
    }
}

ok: Ok
construct(&ok)
destruct(&ok)