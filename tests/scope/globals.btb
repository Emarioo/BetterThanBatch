
@TEST_CASE(global_from_import)

#import "./globals2.btb"

global num: i32;
fn main() -> i32{
    I_AM_GLOBAL = 23;

    return I_AM_GLOBAL + num;
}

@TEST_CASE(initialized_globals)

#import "Logger"
#import "File"

struct Okay {
    x: i32 = 5;
    b: NUm;
}
struct NUm {
    n: i32 = 3 * 2
}

global nom: i32 = 23 + 923  // comp-time evaluation of global
global ok: Okay             // initialized with default values

fn main() {
    _test 23 + 923; nom
    _test 5; ok.x
    _test 3 * 2; ok.b.n
}

@TEST_CASE(imported_global)

#if OS_WINDOWS
    // what about windows
#elif OS_LINUX
    #load "libc.so.6" as libc

    #import "Logger"

    global @import(libc) environ: char**;

    fn main() {
        a := environ
        // log(cast<i64>cast<void*>environ)
        log(*environ)
    }
#endif

