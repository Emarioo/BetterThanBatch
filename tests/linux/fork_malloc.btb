
// #import "String"
// #import "OS"
#import "Logger"
#import "Linux"
#import "Lang"

fn main(argc: i32, argv: char**, envp: char**) -> i32 {
    #load "c" as libc
    fn @import(libc) malloc(size: i32) -> void*;

    ptr := malloc(8) // commenting this line fixes the error
    free(ptr) // malloc + free does not cause EFAULT

    pid := fork()

    if pid == 0 {
        exit(0)
    }

    info: siginfo
    flags: i32 = WEXITED
    res := waitid(P_PID, pid, &info, flags) // forked process crashed, EFAULT?
    // SOLUTION: waitid was not defined properly, it uses an extra argument (su: rusage*)
    if res < 0 {
        std_print_any(&info)
        log("Error in 'ExecuteCommand': waitid, ", name_of_error(res))
    }

    return 0
}
