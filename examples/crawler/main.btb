/*
    A dungeon crawler game

    - Multiplayer (local and online co-op)
    - Handmade levels + random generated dungeon
    - Tile-based world
    - Entities with velocity, effects, collision
*/

#import "Hotreloading"
#import "OS"

fn main(argc: i32, argv: char**) -> i32 {
    app: AppInstance
    app.argc = argc
    app.argv = argv
    app.rebuild_cmd.append("btb examples/crawler/GameCore -d --stable-globals --silent --incremental -o bin/code.dll")
    // app.rebuild_cmd.append("btb examples/crawler/GameCore -d --silent --incremental -o bin/code.dll")
    // app.rebuild_cmd.append("btb examples/crawler/GameCore -d --incremental -o bin/code.dll")

    #if OS_WINDOWS
        app.init("bin/code.dll")
    #else
        app.init("bin/code.so")
    #endif
    
    // Load libraries to make sure they never unload when
    // we reload game code, their global data will be reset otherwise.
    // Ideally, we would have a list of all libraries the game relies on
    // but. I have hardcoded them for the time being.
    lib0 := LoadDynamicLibrary("glad.dll")
    lib1 := LoadDynamicLibrary("glfw3.dll")
    lib2 := LoadDynamicLibrary("stb_image.dll")

    yes := StartInfiniteLoop(app)

    if !yes
        return 1
    return 0
}

