/*
    A dungeon crawler game

    - Multiplayer (local and online co-op)
    - Handmade levels + random generated dungeon
    - Tile-based world
    - Entities with velocity, effects, collision
*/

#import "Hotreloading"
#import "OS"

fn main(argc: i32, argv: char**) -> i32 {
    app: AppInstance
    app.argc = argc
    app.argv = argv
    app.rebuild_func = build

    global do_async: bool
    global exit_code: i32
    fn build() {
        ExecuteCommand("btb examples/crawler/GameCore -d --silent --incremental -o bin/code.dll", &exit_code, asynchronous = do_async)
    }
    do_async = false
    build()
    if exit_code != 0
        return 1;
    do_async = true

    #if OS_WINDOWS
        app.init("bin/code.dll")
    #else
        app.init("bin/code.so")
    #endif
    
    // Load libraries to make sure they never unload
    // when we reload game core, their global data will be reset otherwise
    // We hardcode the path, not sure how else to do it.
    lib0 := LoadDynamicLibrary("glad.dll")
    lib1 := LoadDynamicLibrary("glfw3.dll")

    StartInfiniteLoop(app)

    return 0
}

