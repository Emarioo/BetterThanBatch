// #import "OS"
// #import "./factorial"

#import "Logger"

// #link "uuid.lib" // not necessary for some reason
#link "bin/NativeLayer.lib"

fn @dllimport GetStdHandle(num: u32) -> void*;
fn @dllimport WriteFile(file: void*, buffer: void*, bytes: u32, 
    writtenBytes: u32*, overlapped: void*) -> bool;
fn @dllimport GetLastError() -> u32;

fn @extern printme() -> u32;

_print(printme())

str = " from NativeLayer.cpp!\n";
WriteFile(GetStdHandle(-11), str.ptr, str.len, null, null)

//-- external/native functions
// fn @native prints(n: char[]);
// prints("HELL YES!\n")
// fn @dllimport GetStdHandle(id: u32);
// GetStdHandle(-11);

//-- global data
// a = "K";
// *a.ptr

//-- intrinsics?
// fn @intrinsic memzero(dst: void*, len: u64);
// fn @intrinsic memcpy(dst: void*, src: void*, len: u64);

// a: i32[3];
// b: i32[3];

// a.ptr[2] = 9;
// memzero(a.ptr, a.len * sizeof i32);
// final = a.ptr[2]; // should be zero

// a.ptr[2] = 9;
// memcpy(b.ptr, a.ptr, a.len * sizeof i32);
// final += b.ptr[2] // 9 should have been copied
// final // leave value in eax as error code

//-- loops
// a = 0
// for 0..5 {
//     a += nr;
// }
// a

//-- recursion
// #import "./factorial"
// factorial(4)

//-- deep functions
// fn b() -> i32 {
//     return 2
// }
// b() * 3
// fn a(n: i32) -> i32 {
//     return b() * n
// }
// fn c(n: i32) -> i32 {
//     a(2)
//     // 3 * n
//     return a(2) * n
// }
// c(9)

// b()

// b()

//-- function test
// fn fun(a: i32) -> i32 { return a + 5; }
// fun(92)

//-- local variable test
// a = 9
// b = 23
// a + b