
// #import "Logger"


/*
    Compile time execution:
    
    1. Run directives at global level runs at the bytecode generation like evaulation of global values.
    
    2. Run directives in expressions 
    
    2. Detect circular dependency.
        We can't execute run directive inside a function that
        the run eventually calls since it's not generated yet and the 
        run needs to execute before we can generate it.
        
*/


fn @export build() {
    #run forn()
}
fn forn() {
    go()
}
fn @export go() {
    #run build()
}

// If run directive is encountered in another run directive then it is ignored.
// #run 1 + #run 5
#run 1 + (#run 5)

go()

fn oc() {
    // run directive in global should not affect the function
    global g := #run 1
}
