// #import "examples/crawler/main" // With hotreloading
// #import "examples/crawler/GameCore" // Without hotreloading


// #import "HTTP"
// #import "Logger"


// StartHTTPServer(8080, handle, null, wait = true)

// fn handle(req: HTTPRequest*, e: Event, ud: void*) {
//     log(req)
// }

// #import "File"

// #import "./windows/sslserver"
// #import "./net/serverclient"

#import "Logger"
#import "Linux"
// #import "OS"

fd := open("LICENSE".ptr, 0, 0)
if fd < 0
    return 1

safe: char[]
extra: char[50]
for @ptr extra {
    *it = 'X'
}
safe = extra
info: stat
res := fstat(fd, &info)
log("sizeof stat: ",sizeof stat)
for @ptr @rev safe {
    if *it == 0;
        *it = '_'
    log("extra ",nr, " ", *it)
}

return 0
// #import "GLFW"
// #import "GLAD"
// #import "Logger"
// #import "OS"

// fn main() {
//     glfwInit();
    // yes := glfwInit();
    // if !yes {
    //     log("glfwInit failed");
    //     return ;
    // }
    // glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 4);
    // glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 3);
    // glfwWindowHint(GLFW_OPENGL_PROFILE, GLFW_OPENGL_CORE_PROFILE);

    // width := 800
    // height := 600
    // title := "hey"
    // glfw_window := glfwCreateWindow(width, height, title.ptr, null, null);
    // if !glfw_window {
    //     log("window failed");
    //     glfwTerminate();
    //     return ;
    // }

    // glfwMakeContextCurrent(glfw_window)

    // yes = gladLoadGL()
    // if !yes {
    //     log("gladLoadGL failed")
    //     glfwTerminate()
    //     return ;
    // }

    // glViewport(0, 0, width, height)

    // while (!glfwWindowShouldClose(glfw_window)) {
    //     glViewport(0, 0, width, height)
                
// #import "Logger"
