// @macro-benchmark
#import "OS"
// #import "Logger"
// #import "Basic"
// #import "./macros"
// #import "./macro-bench"
// #import "./overloading"

// #import "./defer"
#import "./dir-iterator"
// #import "./factorial"

// tp = StartTimePoint()

// for 0..1000 {
//     printi(nr); prints("\n");
// }


// fn dob() -> f32 { return 0.92 }
// printd(dob())

// printi(EndTimePoint(tp)*1000000);
// 
// fn @native printi(str: i64);
// fn @native printi(str: i64);
// fn @native printi(str: i32);
// fn @native prints(str: char[]);

// str = "a"
// printi(str.len)
// printi(cast<u64>str.ptr)
// prints(str)
// printi(matchEnd(str,"b"))

// for 0..1 {
//     printi(nr)
//     printi(it)
// }

// fn matchEnd(str: char[], match: char[]) -> bool {
//     if str.len < match.len
//         return false
//     for match {
//         chr = str.ptr[nr + str.len - match.len];
//         if it != chr
//             return false
//     }
//     return true
// }

// // printi(23)

// fn fun(a: i8, b: i8) -> i32 { return 2*(a+b) }

// str = "a.pp"

// matchEnd(str,".cpp")
// if !matchEnd(str,".cpp") {

// }
// println(cast<u64>str.ptr)
// temp(str)

// fn temp(str: char[], ){
//     println(cast<u64>str.ptr);
//     println(str.len);
// }


// fn matchEnd(str: char[], match: char[]) -> bool {
//     if str.len < match.len
//         return false
//     // println(cast<u64>str.ptr," ",str.len," ",cast<u64>match.ptr," ",match.len);
//     for @reverse match {
//         chr = str.ptr[nr + str.len - match.len];
//         if it != chr
//             return false
//     }
//     return true
// }


// a = 9
// b = 3;

// a + 9
// printi(fun(257,257))

// a = fun() +  3;

// printi(a)

// args = CmdLineArgs();

// for @pointer args {
//     // println(cast<u64>it.ptr,": ",it.len);
//     println(*it);
// }


// #define log(X) X

// prints(log("Hello"))
// #define mac temp## #line


// prints(CurrentWorkingDirectory())

// mac
// a = #line

// b = #unique + #unique + #unique

// // prints(#file)
// // str = #filename;
// // str2 = #file;
// // prints(str)
// // prints("\n")
// // prints(str2)

// println(a," ",b, " ",#column);
// println(#file);
// println(#filename);