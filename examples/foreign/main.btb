/*
    Bindings for tiny_math.lib
*/

#load "examples/foreign/tiny_math.dll" as math
fn @import(math,alias="_Z3sumii") sum(start: i32, end: i32) -> i32;

#load "Kernel32.dll" as Kernel32

#macro HANDLE void*
#macro STD_OUTPUT_HANDLE (-11)

fn @import(Kernel32, alias="GetStdHandle") GetStdHandle(nStdHandle: u32) -> HANDLE;
fn @import(Kernel32, alias="WriteFile") WriteFile(
    hFile: HANDLE, 
    lpBuffer: void*,
    nNumberOfBytesToWrite: u32,
    lpNumberOfBytesWritten: u32* = null,
    lpOverlapped: void* = null,
) -> bool;

/*
    Main program
*/

fn main() {
    printi(sum(1,6)) printc('\n')

    s := "Hello World!\n";
    h := GetStdHandle(STD_OUTPUT_HANDLE)
    yes := WriteFile(h, s.ptr, s.len)
}